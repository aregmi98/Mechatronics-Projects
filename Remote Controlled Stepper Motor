#include <Stepper.h>
#include <IRremote.h>
#include <IRremoteInt.h>
int RECV_PIN = 6;
const int stepsPerRevolution = 2048;
IRrecv irrecv(RECV_PIN);
decode_results results;
Stepper stepper(stepsPerRevolution, 11, 9, 10, 8);
int rpm = 8;
void setup() {
  irrecv.enableIRIn();
  rpm = max(rpm, 0);
  Serial.begin(9600);}
void loop() {
  if (irrecv.decode(&results)) {
    switch (results.value) {
      case 0xFF629D: // Increase RPM
        rpm++;
        Serial.print("RPM increased to ");
        Serial.print(rpm);
        Serial.println(" RPM");
        break;

      case 0xFFA857: // Decrease RPM
        rpm--;
        Serial.print("RPM decreased to ");
        Serial.print(rpm);
        Serial.println(" RPM");
        break;
      case 0xFFC23D: // Clockwise rotation
        Serial.println("CW Rotation");
        stepper.step(stepsPerRevolution);
        delay(1000);
        break;
      case 0xFF22DD: // Counterclockwise rotation
        Serial.println("CCW Rotation");
        stepper.step(-stepsPerRevolution);
        delay(1000);
        break;
        }
    // Check and adjust RPM before setting speed
    if (rpm > 9) {
      rpm = 0;
      Serial.println("RPM is over > 9RPM. MOTOR STOPPED FOR 3 SEC.");
      delay (3000);
      rpm = rpm+1;
    } else if (rpm < 1) {
      rpm = 0;
      Serial.println("RPM is under < 1 RPM. MOTOR STOPPED.");}
    stepper.setSpeed(rpm);
    irrecv.resume();}
  // Prevent unexpected movement if no IR command received
  if (rpm > 0) {
    stepper.step(1);}}
